<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="_led_effects_8c" kind="file" language="C++">
    <compoundname>LedEffects.c</compoundname>
    <includes refid="globals_8h" local="yes">globals.h</includes>
    <includes refid="_lightstribe_8h" local="yes">Lightstribe.h</includes>
    <includes refid="_led_effects_8h" local="yes">LedEffects.h</includes>
    <includes local="no">util/delay.h</includes>
    <incdepgraph>
      <node id="9">
        <label>Lightstribe.h</label>
        <link refid="_lightstribe_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>avr/io.h</label>
      </node>
      <node id="12">
        <label>util/delay.h</label>
      </node>
      <node id="6">
        <label>LedEffects.c</label>
        <link refid="LedEffects.c"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>LedEffects.h</label>
        <link refid="_led_effects_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_led_effects_8c_1ad67a4e660b5122ed454e101432bbdba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t map</definition>
        <argsstring>(uint8_t x, uint8_t in_min, uint8_t in_max, uint8_t out_min, uint8_t out_max)</argsstring>
        <name>map</name>
        <param>
          <type>uint8_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>in_min</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>in_max</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>out_min</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>out_max</declname>
        </param>
        <briefdescription>
<para>Arduino map function; used for color conversion. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>x: value to map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>in_min : minimum value input reference </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>in_max : maximum value input reference </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>out_min : minimum value output reference </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>out_max : maximum value output reference </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t : mapped value referring to the input </para></simplesect>
<simplesect kind="note"><para>This function is used for color conversion from 8 Bit to 24 Bit colors; How it works: in_min &lt; x &lt; in_max convert to out_min &lt; returnvalue &lt; out_max by positioning the x proportionally in the new number range </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="33" column="1" bodyfile="LedEffects.c" bodystart="33" bodyend="36"/>
        <referencedby refid="_led_effects_8h_1a55291315ab0f2ca8d508f0e9da1920a7" compoundref="_led_effects_8c" startline="45" endline="65">colorconv8to24</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a55291315ab0f2ca8d508f0e9da1920a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref></type>
        <definition>struct color24bit colorconv8to24</definition>
        <argsstring>(uint8_t startcolor)</argsstring>
        <name>colorconv8to24</name>
        <param>
          <type>uint8_t</type>
          <declname>startcolor</declname>
        </param>
        <briefdescription>
<para>color conversion function; converts a 8 Bit color (RGB 3-3-2) to a 24 Bit color (RGB 8-8-8) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>startcolor: 8 Bit color to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref> : 24 Bit color result </para></simplesect>
<simplesect kind="note"><para>This function converts the 8 Bit color to a 24 Bit color depending on the ledtype. This is neccessary because of differnt color formats (WS2811-&gt;RGB ; WS2812-&gt;GRB). Original the whole environment was for WS2812 LEDs! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="33" column="1" bodyfile="LedEffects.c" bodystart="45" bodyend="65"/>
        <references refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" compoundref="_lightstribe_8h" startline="22">color24bit::blue</references>
        <references refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" compoundref="_lightstribe_8h" startline="20">color24bit::green</references>
        <references refid="globals_8h_1a722e1eb38b661d1338ada3cc7a4049a0" compoundref="globals_8h" startline="29">ledtype</references>
        <references refid="_led_effects_8c_1ad67a4e660b5122ed454e101432bbdba0" compoundref="_led_effects_8c" startline="33" endline="36">map</references>
        <references refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" compoundref="_lightstribe_8h" startline="18">color24bit::red</references>
        <referencedby refid="_led_effects_8h_1a25e09bcb1481b20ebc2a27e7098b5115" compoundref="_led_effects_8c" startline="514" endline="534">easteregg</referencedby>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void effectdelay</definition>
        <argsstring>(uint16_t delay)</argsstring>
        <name>effectdelay</name>
        <param>
          <type>uint16_t</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
<para>simple delay function; no concrete delay time </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uint16_t</parametername>
</parameternamelist>
<parameterdescription>
<para>delay : delay value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>This function is just a variable delay, there is no coherence with a concrete time (i.e. s, ms) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="72" column="1" bodyfile="LedEffects.c" bodystart="72" bodyend="88"/>
        <references refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" compoundref="globals_8h" startline="53">PacketComplete</references>
        <referencedby refid="_led_effects_8h_1a9fd87d01d5cc4ce5fce6ddca55ebaf37" compoundref="_led_effects_8c" startline="278" endline="288">blinkled</referencedby>
        <referencedby refid="_led_effects_8h_1ac83bd19da7ebd3c475e3667e4229db41" compoundref="_led_effects_8c" startline="489" endline="507">eastereggbase</referencedby>
        <referencedby refid="_led_effects_8h_1a71d3b2ff21a63b48a01461e74be0c2b8" compoundref="_led_effects_8c" startline="366" endline="428">faden</referencedby>
        <referencedby refid="_led_effects_8h_1a99174e2b381d7ec6667d29352e6eca1b" compoundref="_led_effects_8c" startline="549" endline="568">fillup</referencedby>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
        <referencedby refid="_led_effects_8h_1a448758d76f47ea6fed4beb349196363f" compoundref="_led_effects_8c" startline="340" endline="351">recolor</referencedby>
        <referencedby refid="_led_effects_8h_1a5bde1e9e7fc19a9916f1ec02d8fbcd6c" compoundref="_led_effects_8c" startline="323" endline="328">run_alternating</referencedby>
        <referencedby refid="_led_effects_8h_1a35cfbfc36c975f98a7779a37b6ff63ce" compoundref="_led_effects_8c" startline="236" endline="267">runrunled</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setfullcolor</definition>
        <argsstring>(struct color24bit color, uint8_t *lightdata)</argsstring>
        <name>setfullcolor</name>
        <param>
          <type>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <briefdescription>
<para>Set all LEDs to the chosen color; run transmit2leds afterwards to update the LEDs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">struct</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcolor24bit" kindref="compound">color24bit</ref> color : color to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>This function sets the lightdata array. To update the stribe run transmit2leds afterwards! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="96" column="1" bodyfile="LedEffects.c" bodystart="96" bodyend="111"/>
        <references refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" compoundref="_lightstribe_8h" startline="22">color24bit::blue</references>
        <references refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" compoundref="_lightstribe_8h" startline="20">color24bit::green</references>
        <references refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" compoundref="globals_8h" startline="25">NumOfLeds</references>
        <references refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" compoundref="_lightstribe_8h" startline="18">color24bit::red</references>
        <referencedby refid="_led_effects_8h_1a9fd87d01d5cc4ce5fce6ddca55ebaf37" compoundref="_led_effects_8c" startline="278" endline="288">blinkled</referencedby>
        <referencedby refid="_led_effects_8h_1a71d3b2ff21a63b48a01461e74be0c2b8" compoundref="_led_effects_8c" startline="366" endline="428">faden</referencedby>
        <referencedby refid="_led_effects_8h_1af67b7638a175e4971f25df5a5db3d8d0" compoundref="_led_effects_8c" startline="300" endline="311">init_alternating</referencedby>
        <referencedby refid="_led_effects_8h_1aecba07ab559ab94e6f44c16e39012d80" compoundref="_led_effects_8c" startline="217" endline="221">initrunled</referencedby>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
        <referencedby refid="_led_effects_8h_1a1c5e6b0f45c1787c25f8eafa8b9c6247" compoundref="_led_effects_8c" startline="118" endline="125">resetstribe</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a1c5e6b0f45c1787c25f8eafa8b9c6247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void resetstribe</definition>
        <argsstring>(uint8_t *lightdata)</argsstring>
        <name>resetstribe</name>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <briefdescription>
<para>Set all LEDs off; run transmit2leds afterwards to update the LEDs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>This function sets the lightdata array to 0x00. To update the stribe run transmit2leds afterwards! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="118" column="1" bodyfile="LedEffects.c" bodystart="118" bodyend="125"/>
        <references refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" compoundref="_lightstribe_8h" startline="22">color24bit::blue</references>
        <references refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" compoundref="_lightstribe_8h" startline="20">color24bit::green</references>
        <references refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" compoundref="_lightstribe_8h" startline="18">color24bit::red</references>
        <references refid="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" compoundref="_led_effects_8c" startline="96" endline="111">setfullcolor</references>
        <referencedby refid="_led_effects_8h_1a9fd87d01d5cc4ce5fce6ddca55ebaf37" compoundref="_led_effects_8c" startline="278" endline="288">blinkled</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1afd64325b08e785d37b4dfaf358e517f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotate</definition>
        <argsstring>(uint8_t *lightdata, uint8_t direction)</argsstring>
        <name>rotate</name>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Rotate the lightdata for 1 LED Position; run transmit2leds afterwards to update the LEDs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>direction : direction to rotate </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>This function rotates lightdata array. To update the stribe run transmit2leds afterwards! The rotation &quot;moves every LED&quot; by one step, the overflowing LED is appended at the other ending. Example: RED BLUE YELLOW GREEN ... rotate... BLUE YELLOW GREEN RED other direction: RED BLUE YELLOW GREEN ... rotate... GREEN RED BLUE YELLOW </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="138" column="1" bodyfile="LedEffects.c" bodystart="138" bodyend="182"/>
        <references refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" compoundref="globals_8h" startline="25">NumOfLeds</references>
        <referencedby refid="_led_effects_8h_1ac83bd19da7ebd3c475e3667e4229db41" compoundref="_led_effects_8c" startline="489" endline="507">eastereggbase</referencedby>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
        <referencedby refid="_led_effects_8h_1a1fa5e03cb24195a46dcdc5948f596181" compoundref="_led_effects_8c" startline="196" endline="203">rotateN</referencedby>
        <referencedby refid="_led_effects_8h_1a5bde1e9e7fc19a9916f1ec02d8fbcd6c" compoundref="_led_effects_8c" startline="323" endline="328">run_alternating</referencedby>
        <referencedby refid="_led_effects_8h_1a35cfbfc36c975f98a7779a37b6ff63ce" compoundref="_led_effects_8c" startline="236" endline="267">runrunled</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a1fa5e03cb24195a46dcdc5948f596181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rotateN</definition>
        <argsstring>(uint8_t *lightdata, uint8_t direction, uint8_t width)</argsstring>
        <name>rotateN</name>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Rotate the lightdata for n LED Positions; run transmit2leds afterwards to update the LEDs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>direction : direction to rotate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>width : width to rotate </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>This function rotates lightdata array. To update the stribe run transmit2leds afterwards! The rotation &quot;moves every LED&quot; by n steps, the overflowing LEDs are appended at the other ending. Example: RED BLUE YELLOW GREEN PINK ... rotate 2 ... YELLOW GREEN PINK RED BLUE other direction: RED BLUE YELLOW GREEN PINK ... rotate 2 ... GREEN PINK RED BLUE YELLOW </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="196" column="1" bodyfile="LedEffects.c" bodystart="196" bodyend="203"/>
        <references refid="_led_effects_8c_1afd64325b08e785d37b4dfaf358e517f0" compoundref="_led_effects_8c" startline="138" endline="182">rotate</references>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1aecba07ab559ab94e6f44c16e39012d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initrunled</definition>
        <argsstring>(struct color24bit color, uint8_t *lightdata, struct color24bit background)</argsstring>
        <name>initrunled</name>
        <param>
          <type>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <param>
          <type>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref></type>
          <declname>background</declname>
        </param>
        <briefdescription>
<para>init the runled effect; run runrunled afterwards to start the effect </para>        </briefdescription>
        <detaileddescription>
<para>This function initializes the running LED effect. The running LED effect has a background color that is used for all LEDs except one. One LED is in the foreground color an moves stepwise along the stribe. The initialization prepares the lightdata array by setting one LED at the start position and filling the others with the background color. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">struct</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcolor24bit" kindref="compound">color24bit</ref> color : 24 Bit color for the effect </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">struct</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcolor24bit" kindref="compound">color24bit</ref> background : 24 Bit color for the effect background </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>Run runrunled afterwards to start the effect! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="217" column="1" bodyfile="LedEffects.c" bodystart="217" bodyend="221"/>
        <references refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" compoundref="_lightstribe_8c" startline="33" endline="41">changeled</references>
        <references refid="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" compoundref="_led_effects_8c" startline="96" endline="111">setfullcolor</references>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a35cfbfc36c975f98a7779a37b6ff63ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void runrunled</definition>
        <argsstring>(uint8_t *lightdata, uint8_t direction)</argsstring>
        <name>runrunled</name>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Do the runled effect; before this function is called the lightdata needs to be initiliazed using initrunled! </para>        </briefdescription>
        <detaileddescription>
<para>This function runs the running LED effect. The running LED effect has a background color that is used for all LEDs except one. The one LED moves stepwise to the next position depending on the chosen direction. Direction 0/1 are right/left, direction 2 runs from left to right an back again. For direction 0/1 the running LED overflows and begins on the other ending. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>direction : movement direction, 0/1 = right/left, 2 = left-&gt;right and back </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>No need to run transmit2leds afterwards! This is already done in the function. The function is interrupted if a new UART package is completely received so a new effect gets active. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="236" column="1" bodyfile="LedEffects.c" bodystart="236" bodyend="267"/>
        <references refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" compoundref="_led_effects_8c" startline="72" endline="88">effectdelay</references>
        <references refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" compoundref="globals_8h" startline="27">effectime</references>
        <references refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" compoundref="globals_8h" startline="25">NumOfLeds</references>
        <references refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" compoundref="globals_8h" startline="53">PacketComplete</references>
        <references refid="_led_effects_8c_1afd64325b08e785d37b4dfaf358e517f0" compoundref="_led_effects_8c" startline="138" endline="182">rotate</references>
        <references refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" compoundref="_lightstribe_8c" startline="96" endline="170">transmit2leds</references>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a9fd87d01d5cc4ce5fce6ddca55ebaf37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void blinkled</definition>
        <argsstring>(struct color24bit color, uint8_t *lightdata)</argsstring>
        <name>blinkled</name>
        <param>
          <type>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <briefdescription>
<para>blink the whole stribe; this function does not need another function call </para>        </briefdescription>
        <detaileddescription>
<para>This function creates a blinking effect. First all LEDs are set to the chosen color, after the defined delay the LEDs are turned off. This is repeated in the main while loop. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">struct</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcolor24bit" kindref="compound">color24bit</ref> color : color for the blink effect </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>No need to run transmit2leds afterwards! This is already done in the function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="278" column="1" bodyfile="LedEffects.c" bodystart="278" bodyend="288"/>
        <references refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" compoundref="_led_effects_8c" startline="72" endline="88">effectdelay</references>
        <references refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" compoundref="globals_8h" startline="27">effectime</references>
        <references refid="_led_effects_8c_1a1c5e6b0f45c1787c25f8eafa8b9c6247" compoundref="_led_effects_8c" startline="118" endline="125">resetstribe</references>
        <references refid="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" compoundref="_led_effects_8c" startline="96" endline="111">setfullcolor</references>
        <references refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" compoundref="_lightstribe_8c" startline="96" endline="170">transmit2leds</references>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1af67b7638a175e4971f25df5a5db3d8d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_alternating</definition>
        <argsstring>(struct color24bit color, struct color24bit backcolor, uint8_t *lightdata)</argsstring>
        <name>init_alternating</name>
        <param>
          <type>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref></type>
          <declname>backcolor</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <briefdescription>
<para>initialize the alternating function; call run_alternating afterwards </para>        </briefdescription>
        <detaileddescription>
<para>This function initializes the alternating effect. The effect assigns every even LED number in one color and the odd numbers in the background color. If the effect is running, the odd and even LED switch positions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">struct</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcolor24bit" kindref="compound">color24bit</ref> color : color for the alternate effect (Init even LEDs) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">struct</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcolor24bit" kindref="compound">color24bit</ref> backcolor : color for the alternate effect bakckground (Init odd LEDs) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>Run run_alternating afterwards to start the effect! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="300" column="1" bodyfile="LedEffects.c" bodystart="300" bodyend="311"/>
        <references refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" compoundref="_lightstribe_8c" startline="33" endline="41">changeled</references>
        <references refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" compoundref="globals_8h" startline="25">NumOfLeds</references>
        <references refid="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" compoundref="_led_effects_8c" startline="96" endline="111">setfullcolor</references>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a5bde1e9e7fc19a9916f1ec02d8fbcd6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void run_alternating</definition>
        <argsstring>(uint8_t *lightdata)</argsstring>
        <name>run_alternating</name>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <briefdescription>
<para>Run the alternating effect; call init_alternating before. </para>        </briefdescription>
        <detaileddescription>
<para>This function runs the alternating effect. The effect assigns every even LED number in one color and the odd numbers in the background color. If the effect is running, the odd and even LED switch positions. This function rotates the LEDs by one position to achieve the effect. The rotation direction is not of importance. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>No need to run transmit2leds afterwards! The effect is generated by the main while loop. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="323" column="1" bodyfile="LedEffects.c" bodystart="323" bodyend="328"/>
        <references refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" compoundref="_led_effects_8c" startline="72" endline="88">effectdelay</references>
        <references refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" compoundref="globals_8h" startline="27">effectime</references>
        <references refid="_led_effects_8c_1afd64325b08e785d37b4dfaf358e517f0" compoundref="_led_effects_8c" startline="138" endline="182">rotate</references>
        <references refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" compoundref="_lightstribe_8c" startline="96" endline="170">transmit2leds</references>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a448758d76f47ea6fed4beb349196363f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void recolor</definition>
        <argsstring>(struct color24bit color, uint8_t *lightdata)</argsstring>
        <name>recolor</name>
        <param>
          <type>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <briefdescription>
<para>Recolor the LED stribe; no other function call is necessary. </para>        </briefdescription>
        <detaileddescription>
<para>This function generates a recolor effect. The old configuration of the LEDs is overwritten with the new color step by step. When the whole stribe is filled with the new color the effect ends. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">struct</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcolor24bit" kindref="compound">color24bit</ref> color : color that is used for recoloring </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>No need to run transmit2leds afterwards! The effect is standalone and ends if the stribe is recolored. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="340" column="1" bodyfile="LedEffects.c" bodystart="340" bodyend="351"/>
        <references refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" compoundref="_lightstribe_8c" startline="33" endline="41">changeled</references>
        <references refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" compoundref="_led_effects_8c" startline="72" endline="88">effectdelay</references>
        <references refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" compoundref="globals_8h" startline="27">effectime</references>
        <references refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" compoundref="globals_8h" startline="25">NumOfLeds</references>
        <references refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" compoundref="globals_8h" startline="53">PacketComplete</references>
        <references refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" compoundref="_lightstribe_8c" startline="96" endline="170">transmit2leds</references>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a71d3b2ff21a63b48a01461e74be0c2b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faden</definition>
        <argsstring>(struct color24bit color, uint8_t *lightdata)</argsstring>
        <name>faden</name>
        <param>
          <type>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <briefdescription>
<para>Generate a fading color effect. No other function call is necessary. </para>        </briefdescription>
        <detaileddescription>
<para>This function generates a fading color effect. At the beginning the whole stribe is filled with the chosen color. The color intensity of each color channel (blue, red, green) is decreased until the stribe is off. After that the color values are increased until the chosen color values are reached. The effect looks different depending on the chosen color because the color value proportion is not kept over the whole effect. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">struct</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcolor24bit" kindref="compound">color24bit</ref> color : color that is used for the fading effect </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>No need to run transmit2leds afterwards! The effect is standalone and ends is looped in the main while loop. The color value proportion is not kept over the whole effect. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="366" column="1" bodyfile="LedEffects.c" bodystart="366" bodyend="428"/>
        <references refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" compoundref="_lightstribe_8h" startline="22">color24bit::blue</references>
        <references refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" compoundref="_led_effects_8c" startline="72" endline="88">effectdelay</references>
        <references refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" compoundref="globals_8h" startline="27">effectime</references>
        <references refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" compoundref="_lightstribe_8h" startline="20">color24bit::green</references>
        <references refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" compoundref="globals_8h" startline="53">PacketComplete</references>
        <references refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" compoundref="_lightstribe_8h" startline="18">color24bit::red</references>
        <references refid="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" compoundref="_led_effects_8c" startline="96" endline="111">setfullcolor</references>
        <references refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" compoundref="_lightstribe_8c" startline="96" endline="170">transmit2leds</references>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a9d0f91360c87b851925bf05be5352435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initrainbow</definition>
        <argsstring>(uint8_t *lightdata)</argsstring>
        <name>initrainbow</name>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <briefdescription>
<para>Initialize a rainbow on the color array; to show the rainbow run transmit2leds afterwards. </para>        </briefdescription>
        <detaileddescription>
<para>This function fills the color array with rainbow colors. For this effect the color array is filled with different colors that are calculated by increasing and decreasing the color channels to loop over a RGB palette. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>Run transmit2leds afterwards! A nice effect is to rotate the array stepwise after the rainbow initialization (run transmit2leds after every rotation). The effect directly sets color values, so there may be a problem with the color profiles (RGB vs. GRB). The function was primary written for WS2812 LEDs (GRB)! The effect needs a minimum number of 20 LEDs to look nice! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="442" column="1" bodyfile="LedEffects.c" bodystart="442" bodyend="481"/>
        <references refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" compoundref="_lightstribe_8h" startline="22">color24bit::blue</references>
        <references refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" compoundref="_lightstribe_8c" startline="33" endline="41">changeled</references>
        <references refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" compoundref="_lightstribe_8h" startline="20">color24bit::green</references>
        <references refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" compoundref="globals_8h" startline="25">NumOfLeds</references>
        <references refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" compoundref="_lightstribe_8h" startline="18">color24bit::red</references>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1ac83bd19da7ebd3c475e3667e4229db41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eastereggbase</definition>
        <argsstring>(struct color24bit color, uint8_t *lightdata)</argsstring>
        <name>eastereggbase</name>
        <param>
          <type>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <briefdescription>
<para>Initialize the easteregg; do not use directly; this function is used by the easteregg function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">struct</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcolor24bit" kindref="compound">color24bit</ref> color : color for the easteregg </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>Do not use this function directly; this function is used by the easteregg function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="489" column="1" bodyfile="LedEffects.c" bodystart="489" bodyend="507"/>
        <references refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" compoundref="_lightstribe_8c" startline="33" endline="41">changeled</references>
        <references refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" compoundref="_led_effects_8c" startline="72" endline="88">effectdelay</references>
        <references refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" compoundref="globals_8h" startline="27">effectime</references>
        <references refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" compoundref="globals_8h" startline="25">NumOfLeds</references>
        <references refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" compoundref="globals_8h" startline="53">PacketComplete</references>
        <references refid="_led_effects_8c_1afd64325b08e785d37b4dfaf358e517f0" compoundref="_led_effects_8c" startline="138" endline="182">rotate</references>
        <references refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" compoundref="_lightstribe_8c" startline="96" endline="170">transmit2leds</references>
        <referencedby refid="_led_effects_8h_1a25e09bcb1481b20ebc2a27e7098b5115" compoundref="_led_effects_8c" startline="514" endline="534">easteregg</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a25e09bcb1481b20ebc2a27e7098b5115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void easteregg</definition>
        <argsstring>(uint8_t *lightdata)</argsstring>
        <name>easteregg</name>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <briefdescription>
<para>Run the easteregg; No other function call is necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>Just try it :-) funny looking effect </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="514" column="1" bodyfile="LedEffects.c" bodystart="514" bodyend="534"/>
        <references refid="_led_effects_8c_1a55291315ab0f2ca8d508f0e9da1920a7" compoundref="_led_effects_8c" startline="45" endline="65">colorconv8to24</references>
        <references refid="_led_effects_8c_1ac83bd19da7ebd3c475e3667e4229db41" compoundref="_led_effects_8c" startline="489" endline="507">eastereggbase</references>
        <references refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" compoundref="globals_8h" startline="53">PacketComplete</references>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="_led_effects_8c_1a99174e2b381d7ec6667d29352e6eca1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fillup</definition>
        <argsstring>(struct color24bit color, struct color24bit backcolor, uint8_t *lightdata)</argsstring>
        <name>fillup</name>
        <param>
          <type>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>struct <ref refid="structcolor24bit" kindref="compound">color24bit</ref></type>
          <declname>backcolor</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>lightdata</declname>
        </param>
        <briefdescription>
<para>This function fills up the stribe; No other function call is necessary. </para>        </briefdescription>
        <detaileddescription>
<para>This function fills up the whole stribe and beginns again if it is finished. First one LED moves in the chosen color stepwise through the whole stribe and recolors all LEDs in the background color which have already been passed. At the end of the stribe the LED stays an the next single LED is going to move to the last-1 position. The next LED to the last-2 position. This is going on until the whole stribe is colored. Then the effect restarts (main while loop). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">struct</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcolor24bit" kindref="compound">color24bit</ref> color : foreground color for the moving LED </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">struct</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structcolor24bit" kindref="compound">color24bit</ref> backcolor : background color </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uint8_t</parametername>
</parameternamelist>
<parameterdescription>
<para>*lightdata : lightdata array that holds the color values for the stribe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
<simplesect kind="note"><para>This is a standalone effect. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LedEffects.c" line="549" column="1" bodyfile="LedEffects.c" bodystart="549" bodyend="568"/>
        <references refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" compoundref="_lightstribe_8c" startline="33" endline="41">changeled</references>
        <references refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" compoundref="_led_effects_8c" startline="72" endline="88">effectdelay</references>
        <references refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" compoundref="globals_8h" startline="27">effectime</references>
        <references refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" compoundref="globals_8h" startline="25">NumOfLeds</references>
        <references refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" compoundref="globals_8h" startline="53">PacketComplete</references>
        <references refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" compoundref="_lightstribe_8c" startline="96" endline="170">transmit2leds</references>
        <referencedby refid="ws2811lichterkette_8c_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="ws2811lichterkette_8c" startline="447" endline="570">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>effect functions for controlling WS2811/WS2812 LEDs </para>    </briefdescription>
    <detaileddescription>
<para>This file contains different effect functions to control WS2811/WS2812 LEDs using an AVR. It also contains a conversion function to convert 8 Bit color values (RGB 3-3-2) to 24 Bit color values (RGB/GRB 8-8-8). The effects control first the lightdata array and then transmit the array data to the stribe. Using different operations result in different effects. You can add different functions if you like to. But remember that all operations need to be done on the lightdata array that needs to be transmitted at one block to the LEDs after your array has been changed. <simplesect kind="version"><para>V1.00 </para></simplesect>
<simplesect kind="date"><para>05.01.2016 </para></simplesect>
<simplesect kind="authors"><para>Wank Florian </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**************************************************************************/</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_lightstribe_8h" kindref="compound">Lightstribe.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_led_effects_8h" kindref="compound">LedEffects.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/delay.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="_led_effects_8h_1ad67a4e660b5122ed454e101432bbdba0" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="_led_effects_8c_1ad67a4e660b5122ed454e101432bbdba0" kindref="member">map</ref>(uint8_t<sp/>x,<sp/>uint8_t<sp/>in_min,<sp/>uint8_t<sp/>in_max,<sp/>uint8_t<sp/>out_min,<sp/>uint8_t<sp/>out_max)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>-<sp/>in_min)<sp/>*<sp/>(out_max<sp/>-<sp/>out_min)<sp/>/<sp/>(in_max<sp/>-<sp/>in_min)<sp/>+<sp/>out_min;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="_led_effects_8h_1a55291315ab0f2ca8d508f0e9da1920a7" refkind="member"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/><ref refid="_led_effects_8c_1a55291315ab0f2ca8d508f0e9da1920a7" kindref="member">colorconv8to24</ref>(uint8_t<sp/>startcolor)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>color;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="globals_8h_1a722e1eb38b661d1338ada3cc7a4049a0" kindref="member">ledtype</ref>==11)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//color<sp/>conversion<sp/>for<sp/>WS2811<sp/>LEDs<sp/>(RGB<sp/>color)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>converted<sp/>values<sp/>are<sp/>assigned<sp/>to<sp/>the<sp/>colors<sp/>of<sp/>the<sp/>struct,<sp/>red<sp/>an<sp/>green<sp/>are<sp/>switched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//because<sp/>of<sp/>the<sp/>different<sp/>color<sp/>profiles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref><sp/>=<ref refid="_led_effects_8c_1ad67a4e660b5122ed454e101432bbdba0" kindref="member">map</ref>((0b00000011<sp/>&amp;<sp/>startcolor),0,3,0,255);<sp/><sp/><sp/></highlight><highlight class="comment">//2<sp/>Bit<sp/>blue<sp/>converted<sp/>to<sp/>8<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref>=<ref refid="_led_effects_8c_1ad67a4e660b5122ed454e101432bbdba0" kindref="member">map</ref>((0b00011100<sp/>&amp;<sp/>startcolor)&gt;&gt;2,0,7,0,255);<sp/><sp/></highlight><highlight class="comment">//3<sp/>Bit<sp/>green<sp/>converted<sp/>to<sp/>8<sp/>bit,<sp/>assigned<sp/>to<sp/>red<sp/>(color<sp/>profiles!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref>=<ref refid="_led_effects_8c_1ad67a4e660b5122ed454e101432bbdba0" kindref="member">map</ref>((0b11100000<sp/>&amp;<sp/>startcolor)&gt;&gt;5,0,7,0,255);</highlight><highlight class="comment">//3<sp/>Bit<sp/>red<sp/>converted<sp/>to<sp/>8<sp/>bit,<sp/>assigned<sp/>to<sp/>green<sp/>(color<sp/>profiles!)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//color<sp/>conversion<sp/>for<sp/>WS2812<sp/>LEDs<sp/>(GRB<sp/>color)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>converted<sp/>values<sp/>are<sp/>assigned<sp/>to<sp/>the<sp/>colors<sp/>of<sp/>the<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>color<sp/>switching<sp/>is<sp/>done,<sp/>the<sp/>environment<sp/>is<sp/>for<sp/>WS2812<sp/>LEDs<sp/>(GRB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref><sp/>=<ref refid="_led_effects_8c_1ad67a4e660b5122ed454e101432bbdba0" kindref="member">map</ref>((0b00000011<sp/>&amp;<sp/>startcolor),0,3,0,255);<sp/><sp/><sp/></highlight><highlight class="comment">//2<sp/>Bit<sp/>blue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref>=<ref refid="_led_effects_8c_1ad67a4e660b5122ed454e101432bbdba0" kindref="member">map</ref>((0b00011100<sp/>&amp;<sp/>startcolor)&gt;&gt;2,0,7,0,255);</highlight><highlight class="comment">//3<sp/>Bit<sp/>green</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref>=<ref refid="_led_effects_8c_1ad67a4e660b5122ed454e101432bbdba0" kindref="member">map</ref>((0b11100000<sp/>&amp;<sp/>startcolor)&gt;&gt;5,0,7,0,255);<sp/><sp/></highlight><highlight class="comment">//3<sp/>Bit<sp/>red</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>color;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="_led_effects_8h_1a6950e7657ba74d0d490ba36427533c4b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(uint16_t<sp/>delay)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>j;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delay==0)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j=2000;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" kindref="member">PacketComplete</ref>==1)<sp/><sp/></highlight><highlight class="comment">//interrupt<sp/>the<sp/>function<sp/>if<sp/>new<sp/>settings<sp/>have<sp/>been<sp/>received</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">asm</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;nop&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--j);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--delay);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="_led_effects_8h_1a2d54d1a6c61fe667b7c68ff04a11c503" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" kindref="member">setfullcolor</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>color,<sp/>uint8_t<sp/>*lightdata)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ledcolor;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>i;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;<ref refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" kindref="member">NumOfLeds</ref>*3;i++)<sp/></highlight><highlight class="comment">//Loop<sp/>over<sp/>color<sp/>array<sp/>(lightdata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ledcolor<sp/>=<sp/>i%3;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>array<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ledcolor==0)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lightdata++=color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ledcolor==1)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lightdata++=color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lightdata++=color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="_led_effects_8h_1a1c5e6b0f45c1787c25f8eafa8b9c6247" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1a1c5e6b0f45c1787c25f8eafa8b9c6247" kindref="member">resetstribe</ref>(uint8_t<sp/>*lightdata)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>color;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref><sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref>=<sp/>0x00;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref><sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" kindref="member">setfullcolor</ref>(color,<sp/>lightdata);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="_led_effects_8h_1afd64325b08e785d37b4dfaf358e517f0" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1afd64325b08e785d37b4dfaf358e517f0" kindref="member">rotate</ref>(uint8_t<sp/>*lightdata,<sp/>uint8_t<sp/>direction)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp1,<sp/>temp2,<sp/>temp3;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*tempp;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>i;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction==0)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>overflowing<sp/>LED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp1<sp/>=<sp/>*lightdata;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp2=<sp/>*(lightdata+1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp3<sp/>=*(lightdata+2);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Rotate<sp/>the<sp/>array<sp/>(minus<sp/>1<sp/>LED--&gt;overflow;<sp/>1<sp/>LED<sp/>correlate<sp/>three<sp/>8<sp/>Bit<sp/>color<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;<ref refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" kindref="member">NumOfLeds</ref>*3-3;i++)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//increase<sp/>the<sp/>array<sp/>pointer<sp/>step<sp/>by<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lightdata<sp/>=<sp/>*(lightdata+3);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightdata++;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assign<sp/>overflowed<sp/>LED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lightdata++<sp/>=<sp/>temp1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lightdata++<sp/>=<sp/>temp2;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lightdata++<sp/>=<sp/>temp3;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>lightdata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempp<sp/>=<sp/>lightdata<sp/>+<sp/><ref refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" kindref="member">NumOfLeds</ref>*3<sp/>-1;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>overflowing<sp/>LED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp1<sp/>=<sp/>*tempp;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/>*(tempp-1);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp3<sp/>=<sp/>*(tempp-2);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Rotate<sp/>the<sp/>array<sp/>(minus<sp/>1<sp/>LED--&gt;overflow;<sp/>1<sp/>LED<sp/>correlate<sp/>three<sp/>8<sp/>Bit<sp/>color<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;(NumOfLeds*3-3);i++)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//decrease<sp/>the<sp/>array<sp/>pointer<sp/>step<sp/>by<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tempp<sp/>=<sp/>*(tempp-3);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempp--;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assign<sp/>overflowed<sp/>LED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tempp--=temp1;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tempp--=temp2;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tempp<sp/>=<sp/>temp3;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="_led_effects_8h_1a1fa5e03cb24195a46dcdc5948f596181" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1a1fa5e03cb24195a46dcdc5948f596181" kindref="member">rotateN</ref>(uint8_t<sp/>*lightdata,<sp/>uint8_t<sp/>direction,<sp/>uint8_t<sp/>width)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;width;i++)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1afd64325b08e785d37b4dfaf358e517f0" kindref="member">rotate</ref>(lightdata,direction);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="_led_effects_8h_1aecba07ab559ab94e6f44c16e39012d80" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1aecba07ab559ab94e6f44c16e39012d80" kindref="member">initrunled</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>color,<sp/>uint8_t<sp/>*lightdata,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>background)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" kindref="member">setfullcolor</ref>(background,lightdata);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" kindref="member">changeled</ref>(color,<sp/>lightdata,0);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="_led_effects_8h_1a35cfbfc36c975f98a7779a37b6ff63ce" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1a35cfbfc36c975f98a7779a37b6ff63ce" kindref="member">runrunled</ref>(uint8_t<sp/>*lightdata,<sp/>uint8_t<sp/>direction)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Run<sp/>from<sp/>left<sp/>to<sp/>right<sp/>and<sp/>back,<sp/>one<sp/>loop<sp/>in<sp/>this<sp/>function,<sp/>main<sp/>while<sp/>repeats<sp/>the<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction==2)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;<ref refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" kindref="member">NumOfLeds</ref>;i++)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" kindref="member">transmit2leds</ref>(lightdata);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1afd64325b08e785d37b4dfaf358e517f0" kindref="member">rotate</ref>(lightdata,1);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(<ref refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" kindref="member">effectime</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" kindref="member">PacketComplete</ref>==1)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;<ref refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" kindref="member">NumOfLeds</ref>;i++)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1afd64325b08e785d37b4dfaf358e517f0" kindref="member">rotate</ref>(lightdata,0);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" kindref="member">transmit2leds</ref>(lightdata);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(<ref refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" kindref="member">effectime</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" kindref="member">PacketComplete</ref>==1)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//Only<sp/>one<sp/>rotation<sp/>is<sp/>done,<sp/>main<sp/>while<sp/>does<sp/>the<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1afd64325b08e785d37b4dfaf358e517f0" kindref="member">rotate</ref>(lightdata,direction);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" kindref="member">transmit2leds</ref>(lightdata);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(<ref refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" kindref="member">effectime</ref>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="_led_effects_8h_1a9fd87d01d5cc4ce5fce6ddca55ebaf37" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1a9fd87d01d5cc4ce5fce6ddca55ebaf37" kindref="member">blinkled</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>color,<sp/>uint8_t<sp/>*lightdata)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>chosen<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" kindref="member">setfullcolor</ref>(color,<sp/>lightdata);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" kindref="member">transmit2leds</ref>(lightdata);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(<ref refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" kindref="member">effectime</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Turn<sp/>the<sp/>stribe<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a1c5e6b0f45c1787c25f8eafa8b9c6247" kindref="member">resetstribe</ref>(lightdata);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" kindref="member">transmit2leds</ref>(lightdata);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(<ref refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" kindref="member">effectime</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="_led_effects_8h_1af67b7638a175e4971f25df5a5db3d8d0" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1af67b7638a175e4971f25df5a5db3d8d0" kindref="member">init_alternating</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>color,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>backcolor,<sp/>uint8_t<sp/>*lightdata)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>i;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" kindref="member">setfullcolor</ref>(backcolor,<sp/>lightdata);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>background<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;<ref refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" kindref="member">NumOfLeds</ref>;i++)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i%2==0)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" kindref="member">changeled</ref>(color,lightdata,i);<sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>even<sp/>LEDs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="_led_effects_8h_1a5bde1e9e7fc19a9916f1ec02d8fbcd6c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1a5bde1e9e7fc19a9916f1ec02d8fbcd6c" kindref="member">run_alternating</ref>(uint8_t<sp/>*lightdata<sp/>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" kindref="member">transmit2leds</ref>(lightdata);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(<ref refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" kindref="member">effectime</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1afd64325b08e785d37b4dfaf358e517f0" kindref="member">rotate</ref>(lightdata,1);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="_led_effects_8h_1a448758d76f47ea6fed4beb349196363f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1a448758d76f47ea6fed4beb349196363f" kindref="member">recolor</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>color,<sp/>uint8_t<sp/>*lightdata)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;<ref refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" kindref="member">NumOfLeds</ref>;i++)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" kindref="member">changeled</ref>(color,lightdata,i);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" kindref="member">transmit2leds</ref>(lightdata);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(<ref refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" kindref="member">effectime</ref>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" kindref="member">PacketComplete</ref>==1)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="_led_effects_8h_1a71d3b2ff21a63b48a01461e74be0c2b8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1a71d3b2ff21a63b48a01461e74be0c2b8" kindref="member">faden</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>color,<sp/>uint8_t<sp/>*lightdata)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>maxgreen,<sp/>maxred,<sp/>maxblue;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>maxgreen<sp/>=color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>maxblue<sp/>=<sp/>color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>maxred<sp/>=<sp/>color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;255;i++)<sp/></highlight><highlight class="comment">//Fade<sp/>down<sp/>to<sp/>LED<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" kindref="member">setfullcolor</ref>(color,lightdata);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" kindref="member">transmit2leds</ref>(lightdata);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(<ref refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" kindref="member">effectime</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Decrease<sp/>the<sp/>color<sp/>values<sp/>that<sp/>are<sp/>greater<sp/>than<sp/>0,<sp/>stop<sp/>if<sp/>every<sp/>value<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" kindref="member">PacketComplete</ref>==1)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;255;i++)<sp/></highlight><highlight class="comment">//Fade<sp/>up<sp/>to<sp/>chosen<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a2d54d1a6c61fe667b7c68ff04a11c503" kindref="member">setfullcolor</ref>(color,lightdata);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" kindref="member">transmit2leds</ref>(lightdata);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(<ref refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" kindref="member">effectime</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Increase<sp/>the<sp/>color<sp/>values<sp/>is<sp/>they<sp/>are<sp/>lower<sp/>than<sp/>the<sp/>chosen<sp/>color<sp/>value,<sp/>stop<sp/>if<sp/>all<sp/>maximums<sp/>are<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref><sp/>&lt;<sp/>maxgreen)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref><sp/>&lt;<sp/>maxblue)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref><sp/>&lt;<sp/>maxred)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref><sp/>==<sp/>maxred<sp/>&amp;&amp;<sp/>color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref><sp/>==<sp/>maxblue<sp/>&amp;&amp;<sp/>color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref><sp/>==<sp/>maxgreen)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" kindref="member">PacketComplete</ref>==1)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="_led_effects_8h_1a9d0f91360c87b851925bf05be5352435" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1a9d0f91360c87b851925bf05be5352435" kindref="member">initrainbow</ref>(uint8_t<sp/>*lightdata)</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>steps<sp/>=<sp/><ref refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" kindref="member">NumOfLeds</ref><sp/>/<sp/>5;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>color;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i,j;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Start<sp/>rainbow<sp/>with<sp/>red<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref><sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref>=<sp/>0x00;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref>=0x00;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>j=0;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" kindref="member">NumOfLeds</ref>;i++)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j&lt;steps)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref><sp/>=<sp/>0x00+0xFF/steps*j;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//increase<sp/>blue<sp/>to<sp/>get<sp/>violett<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&gt;steps<sp/>&amp;&amp;<sp/>j&lt;=2*steps)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref><sp/>=<sp/>0xFF-0xFF/steps*(j/2);<sp/><sp/></highlight><highlight class="comment">//decrease<sp/>red<sp/>to<sp/>get<sp/>blue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&gt;2*steps<sp/>&amp;&amp;<sp/>j&lt;=3*steps)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref><sp/>=<sp/>0x00+0xFF/steps*(j/3);</highlight><highlight class="comment">//increase<sp/>green<sp/>to<sp/>get<sp/>cyan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&gt;3*steps<sp/>&amp;&amp;<sp/>j&lt;=4*steps)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1a287b397e90d7b995c81ff54e741f96b2" kindref="member">blue</ref><sp/>=<sp/>0xFF-0xFF/steps*(j/4);<sp/></highlight><highlight class="comment">//decrease<sp/>blue<sp/>to<sp/>get<sp/>green</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&gt;4*steps<sp/>&amp;&amp;<sp/>j&lt;=5*steps)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1ad47d918910aaa51c73160ac85999d09c" kindref="member">red</ref><sp/>=<sp/>0x00+0xFF/steps*(j/5);<sp/><sp/></highlight><highlight class="comment">//increase<sp/>red<sp/>to<sp/>get<sp/>yellow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&gt;6*steps)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color.<ref refid="structcolor24bit_1a90d21fa503b626c00cdc8d94863d5877" kindref="member">green</ref><sp/>=<sp/>0xFF-0xFF/steps*(j/6);</highlight><highlight class="comment">//decrease<sp/>green<sp/>to<sp/>get<sp/>red</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" kindref="member">changeled</ref>(color,lightdata,i);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="_led_effects_8h_1ac83bd19da7ebd3c475e3667e4229db41" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1ac83bd19da7ebd3c475e3667e4229db41" kindref="member">eastereggbase</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>color,<sp/>uint8_t<sp/>*lightdata)</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i,j;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>n;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>j=<ref refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" kindref="member">NumOfLeds</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;<ref refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" kindref="member">NumOfLeds</ref>;i++)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n=(j-i);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" kindref="member">changeled</ref>(color,lightdata,0);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(n--&gt;0)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1afd64325b08e785d37b4dfaf358e517f0" kindref="member">rotate</ref>(lightdata,1);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" kindref="member">transmit2leds</ref>(lightdata);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(<ref refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" kindref="member">effectime</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" kindref="member">PacketComplete</ref>==1)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="_led_effects_8h_1a25e09bcb1481b20ebc2a27e7098b5115" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1a25e09bcb1481b20ebc2a27e7098b5115" kindref="member">easteregg</ref>(uint8_t<sp/>*lightdata)</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>color,<sp/>color2;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>color=<ref refid="_led_effects_8c_1a55291315ab0f2ca8d508f0e9da1920a7" kindref="member">colorconv8to24</ref>(252);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>color2=<ref refid="_led_effects_8c_1a55291315ab0f2ca8d508f0e9da1920a7" kindref="member">colorconv8to24</ref>(201);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1ac83bd19da7ebd3c475e3667e4229db41" kindref="member">eastereggbase</ref>(color2,lightdata);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;100;i++)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" kindref="member">PacketComplete</ref>==1)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_delay_ms(50);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1ac83bd19da7ebd3c475e3667e4229db41" kindref="member">eastereggbase</ref>(color,lightdata);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;100;i++)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" kindref="member">PacketComplete</ref>==1)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_delay_ms(50);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="_led_effects_8h_1a99174e2b381d7ec6667d29352e6eca1b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_led_effects_8c_1a99174e2b381d7ec6667d29352e6eca1b" kindref="member">fillup</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>color,</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcolor24bit" kindref="compound">color24bit</ref><sp/>backcolor,<sp/>uint8_t<sp/>*lightdata)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i,j;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;<ref refid="globals_8h_1ad5db4045aed262ed4aae2af9d81fab98" kindref="member">NumOfLeds</ref>;i++)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;j&lt;NumOfLeds-i;j++)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" kindref="member">changeled</ref>(color,lightdata,j);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//running<sp/>LED,<sp/>foreground</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j&gt;0)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1a63fa595d401f0e85c1bba55ba2b1d66e" kindref="member">changeled</ref>(backcolor,lightdata,j-1);<sp/></highlight><highlight class="comment">//background<sp/>LEDs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_lightstribe_8c_1aac724dad670e4a26723daf71ce6a8d8a" kindref="member">transmit2leds</ref>(lightdata);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(<ref refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" kindref="member">effectime</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="globals_8h_1a1b09d1a5bcf4c8ab435bb3c9e36def59" kindref="member">PacketComplete</ref>==1)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_led_effects_8c_1a6950e7657ba74d0d490ba36427533c4b" kindref="member">effectdelay</ref>(<ref refid="globals_8h_1ac2445d316b2972d381edeac44bb6a226" kindref="member">effectime</ref>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="LedEffects.c"/>
  </compounddef>
</doxygen>
